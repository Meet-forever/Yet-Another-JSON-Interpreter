
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'BOOL COLON COMMA LBR LPR NUM RBR RPR STRstart : singltons\n            | keyvaluepairs\n            | list singltons : NUM\n                    | STR\n                    | BOOLkeyvaluepairs : LPR body RPRkeyvaluepairs : LPR RPRbody : body COMMA bodybasebody : bodybase bodybase : STR COLON startlist : LBR items RBRitems : items COMMA baseitemsitems : baseitemsbaseitems : singltons\n                | keyvaluepairs'
    
_lr_action_items = {'NUM':([0,9,20,22,],[5,5,5,5,]),'STR':([0,8,9,19,20,22,],[6,13,6,13,6,6,]),'BOOL':([0,9,20,22,],[7,7,7,7,]),'LPR':([0,9,20,22,],[8,8,8,8,]),'LBR':([0,20,],[9,9,]),'$end':([1,2,3,4,5,6,7,11,18,21,],[0,-1,-2,-3,-4,-5,-6,-8,-7,-12,]),'RPR':([2,3,4,5,6,7,8,10,11,12,18,21,23,24,],[-1,-2,-3,-4,-5,-6,11,18,-8,-10,-7,-12,-9,-11,]),'COMMA':([2,3,4,5,6,7,10,11,12,14,15,16,17,18,21,23,24,25,],[-1,-2,-3,-4,-5,-6,19,-8,-10,22,-14,-15,-16,-7,-12,-9,-11,-13,]),'RBR':([5,6,7,11,14,15,16,17,18,25,],[-4,-5,-6,-8,21,-14,-15,-16,-7,-13,]),'COLON':([13,],[20,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,20,],[1,24,]),'singltons':([0,9,20,22,],[2,16,2,16,]),'keyvaluepairs':([0,9,20,22,],[3,17,3,17,]),'list':([0,20,],[4,4,]),'body':([8,],[10,]),'bodybase':([8,19,],[12,23,]),'items':([9,],[14,]),'baseitems':([9,22,],[15,25,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> singltons','start',1,'p_start','JSONParser.py',37),
  ('start -> keyvaluepairs','start',1,'p_start','JSONParser.py',38),
  ('start -> list','start',1,'p_start','JSONParser.py',39),
  ('singltons -> NUM','singltons',1,'p_singleton','JSONParser.py',44),
  ('singltons -> STR','singltons',1,'p_singleton','JSONParser.py',45),
  ('singltons -> BOOL','singltons',1,'p_singleton','JSONParser.py',46),
  ('keyvaluepairs -> LPR body RPR','keyvaluepairs',3,'p_key_value_pairs','JSONParser.py',55),
  ('keyvaluepairs -> LPR RPR','keyvaluepairs',2,'p_key_value_pairs2','JSONParser.py',59),
  ('body -> body COMMA bodybase','body',3,'p_body','JSONParser.py',63),
  ('body -> bodybase','body',1,'p_body2','JSONParser.py',67),
  ('bodybase -> STR COLON start','bodybase',3,'p_body_base','JSONParser.py',72),
  ('list -> LBR items RBR','list',3,'p_list','JSONParser.py',77),
  ('items -> items COMMA baseitems','items',3,'p_list_items','JSONParser.py',82),
  ('items -> baseitems','items',1,'p_items','JSONParser.py',87),
  ('baseitems -> singltons','baseitems',1,'p_list_base_items','JSONParser.py',91),
  ('baseitems -> keyvaluepairs','baseitems',1,'p_list_base_items','JSONParser.py',92),
]
